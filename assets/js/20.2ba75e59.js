(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{318:function(t,a,s){"use strict";s.r(a);var e=s(38),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"html5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html5","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML5")]),t._v(" "),s("blockquote",[s("p",[t._v("HTML5 基础知识")])]),t._v(" "),s("h2",{attrs:{id:"browserrouter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#browserrouter","aria-hidden":"true"}},[t._v("#")]),t._v(" BrowserRouter")]),t._v(" "),s("p",[t._v("vue-router && react-router 内通过 h5.window.api 的方式来控制 url 和 ui 的同步（另一种方式是通过 hash 值来判断），用于SPA，主要涉及的API为")]),t._v(" "),s("ul",[s("li",[t._v("window.history")]),t._v(" "),s("li",[t._v("window.onpopstate")]),t._v(" "),s("li",[t._v("history.pushState(obj)")]),t._v(" "),s("li",[t._v("history.replaceState(obj)")])]),t._v(" "),s("p",[t._v("我理解一个可能的实现方案就是：通过配置好的渲染组件及路径，当用户操作导致路径改变时，会触发 "),s("code",[t._v("window.onpopstate")]),t._v(" 事件，而该事件内通过事先定义好的方法，来实现相关元素重新渲染指定组件的效果，从而达到 SPA 的效果。与此类似，可以监听 "),s("code",[t._v("hashchange()")]),t._v(" 方法来监听 hash 值的变化")]),t._v(" "),s("h3",{attrs:{id:"window-history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-history","aria-hidden":"true"}},[t._v("#")]),t._v(" window.history")]),t._v(" "),s("p",[t._v("一个 "),s("strong",[t._v("只读")]),t._v(" 属性，用来保存浏览器的会话历史（浏览器地址栏中访问的页面，以及当前页面框架中加载的页面）")]),t._v(" "),s("p",[t._v("history 暴露的主要方法为："),s("code",[t._v("back()")]),t._v(", "),s("code",[t._v("forward()")]),t._v(", "),s("code",[t._v("go()")]),t._v("，其用来控制在用户历史记录中的前后跳转")]),t._v(" "),s("p",[t._v("history 暴露的主要属性为："),s("code",[t._v("length")]),t._v(", "),s("code",[t._v("fscrollRestoration")]),t._v(", "),s("code",[t._v("state")]),t._v("，其用来记录用户的历史记录相关信息")]),t._v(" "),s("h3",{attrs:{id:"window-onpopstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-onpopstate","aria-hidden":"true"}},[t._v("#")]),t._v(" window.onpopstate")]),t._v(" "),s("p",[t._v("每当处于激活状态的历史记录条目发生变化时，就会触发 "),s("code",[t._v("popstate")]),t._v(" 事件")]),t._v(" "),s("p",[t._v("注意，不是地址栏发生变化就会触发，调用 "),s("code",[t._v("history.pushState()")]),t._v(" 或者 "),s("code",[t._v("history.replaceState()")]),t._v(" 不会触发 popstate 事件，其只会在某些浏览器行为下触发，比如 "),s("code",[t._v("back()")]),t._v(", "),s("code",[t._v("forward()")]),t._v(", "),s("code",[t._v("go()")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// demo")]),t._v("\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onpopstate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"location: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", state: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"history-pushstate-state-title-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-pushstate-state-title-url","aria-hidden":"true"}},[t._v("#")]),t._v(" history.pushState({ state, title, url })")]),t._v(" "),s("p",[t._v("向 history.state 内添加历史记录条目")]),t._v(" "),s("ul",[s("li",[t._v("当前地址栏发生变化，但是不会重新加载")]),t._v(" "),s("li",[t._v("不会触发 popstate 事件")]),t._v(" "),s("li",[t._v("一个特性就是，其可以改变 "),s("code",[t._v("XMLHttpRequest")]),t._v(" 请求时的的 referer，并且不会改变当前页面内容")])]),t._v(" "),s("p",[t._v("state 参数为一个 javascript 对象，"),s("code",[t._v("history.state")]),t._v(" 内保存该对象\ntitle（可选），state 的一个短标题\nurl 定义新的历史 url 记录，调用 pushState() 后浏览器并不会立即加载这个URL，但可能会在稍后某些情况下加载这个URL，比如在用户重新打开浏览器时。"),s("strong",[t._v("新URL不必须为绝对路径。如果新URL是相对路径，那么它将被作为相对于当前URL处理（感觉这里就是 SPA 的关键点）")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"page 2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"history-replacestate-state-title-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-replacestate-state-title-url","aria-hidden":"true"}},[t._v("#")]),t._v(" history.replaceState({ state, title, url })")]),t._v(" "),s("p",[t._v("与 pushState 类似，区别在于 "),s("code",[t._v("replaceState()")]),t._v("  是修改了当前的历史记录项而不是新建一个，其使用场景在于为了响应用户行为，比如更新 history.state 或者当前历史记录的 url")])])},[],!1,null,null,null);a.default=r.exports}}]);